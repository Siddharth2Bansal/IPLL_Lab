Terminals unused in grammar

    INVALID_TOKEN


Grammar

    0 $accept: translation_units $end

    1 primary_expression: IDENTIFIER
    2                   | INTEGER_CONSTANT
    3                   | CHARACTER_CONSTANT
    4                   | STRING_LITERAL
    5                   | ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE

    6 postfix_expression: primary_expression
    7                   | postfix_expression SQ_BRACE_OPEN expression SQ_BRACE_CLOSE
    8                   | postfix_expression ROUND_BRACE_OPEN argument_expression_list ROUND_BRACE_CLOSE
    9                   | postfix_expression ROUND_BRACE_OPEN ROUND_BRACE_CLOSE
   10                   | postfix_expression PTR IDENTIFIER

   11 argument_expression_list: assignment_expression
   12                         | argument_expression_list COMMA assignment_expression

   13 unary_expression: postfix_expression
   14                 | unary_operator unary_expression

   15 unary_operator: BITWISEAND
   16               | STAR
   17               | PLUS
   18               | MINUS
   19               | EXCLAMATION

   20 multiplicative_expression: unary_expression
   21                          | multiplicative_expression STAR unary_expression
   22                          | multiplicative_expression DIVIDE unary_expression
   23                          | multiplicative_expression PERCENTAGE unary_expression

   24 additive_expression: multiplicative_expression
   25                    | additive_expression PLUS multiplicative_expression
   26                    | additive_expression MINUS multiplicative_expression

   27 relational_expression: additive_expression
   28                      | relational_expression LESS_THAN additive_expression
   29                      | relational_expression GREATER_THAN additive_expression
   30                      | relational_expression LTE_OP additive_expression
   31                      | relational_expression GTE_OP additive_expression

   32 equality_expression: relational_expression
   33                    | equality_expression EQ_OP relational_expression
   34                    | equality_expression NE_OP relational_expression

   35 logical_AND_expression: equality_expression
   36                       | logical_AND_expression AND_OP equality_expression

   37 logical_OR_expression: logical_AND_expression
   38                      | logical_OR_expression OR_OP equality_expression

   39 conditional_expression: logical_OR_expression
   40                       | logical_OR_expression QUESTION_MARK expression COLON conditional_expression

   41 assignment_expression: conditional_expression
   42                      | unary_expression EQ assignment_expression

   43 expression: assignment_expression

   44 expression_opt: expression
   45               | %empty

   46 declaration: type_specifier init_declarator SEMI_COLON

   47 init_declarator: declarator
   48                | declarator EQ initializer

   49 type_specifier: VOID
   50               | CHAR
   51               | INT

   52 declarator: pointer_opt direct_declarator

   53 direct_declarator: IDENTIFIER
   54                  | direct_declarator SQ_BRACE_OPEN INTEGER_CONSTANT SQ_BRACE_CLOSE
   55                  | direct_declarator ROUND_BRACE_OPEN parameter_list_opt ROUND_BRACE_CLOSE

   56 pointer: STAR

   57 pointer_opt: pointer
   58            | %empty

   59 parameter_list_opt: parameter_list
   60                   | %empty

   61 parameter_list: parameter_declaration
   62               | parameter_list COMMA parameter_declaration

   63 identifier_opt: IDENTIFIER
   64               | %empty

   65 parameter_declaration: type_specifier pointer_opt identifier_opt

   66 initializer: assignment_expression

   67 statement: compound_statement
   68          | expression_statement
   69          | selection_statement
   70          | iteration_statement
   71          | jump_statement

   72 compound_statement: CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

   73 block_item_list_opt: block_item_list
   74                    | %empty

   75 block_item_list: block_item
   76                | block_item_list block_item

   77 block_item: declaration
   78           | statement

   79 expression_statement: expression_opt SEMI_COLON

   80 selection_statement: IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement
   81                    | IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement ELSE statement

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt ROUND_BRACE_CLOSE statement

   83 jump_statement: RETURN expression_opt SEMI_COLON

   84 translation_units: translation_unit
   85                  | translation_units translation_unit

   86 translation_unit: function_definition
   87                 | declaration

   88 function_definition: type_specifier declarator compound_statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PTR (258) 10
    EQ (259) 42 48
    CURLY_BRACE_OPEN (260) 72
    CURLY_BRACE_CLOSE (261) 72
    ROUND_BRACE_OPEN (262) 5 8 9 55 80 81 82
    ROUND_BRACE_CLOSE (263) 5 8 9 55 80 81 82
    SQ_BRACE_OPEN (264) 7 54
    SQ_BRACE_CLOSE (265) 7 54
    COLON (266) 40
    SEMI_COLON (267) 46 79 82 83
    QUESTION_MARK (268) 40
    EQ_OP (269) 33
    NE_OP (270) 34
    LTE_OP (271) 30
    GTE_OP (272) 31
    AND_OP (273) 36
    OR_OP (274) 38
    LESS_THAN (275) 28
    GREATER_THAN (276) 29
    BITWISEAND (277) 15
    STAR (278) 16 21 56
    PLUS (279) 17 25
    MINUS (280) 18 26
    EXCLAMATION (281) 19
    DIVIDE (282) 22
    PERCENTAGE (283) 23
    COMMA (284) 12 62
    VOID (285) 49
    CHAR (286) 50
    INT (287) 51
    IF (288) 80 81
    ELSE (289) 81
    FOR (290) 82
    RETURN (291) 83
    IDENTIFIER (292) 1 10 53 63
    INTEGER_CONSTANT (293) 2 54
    CHARACTER_CONSTANT (294) 3
    STRING_LITERAL (295) 4
    INVALID_TOKEN (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    primary_expression (43)
        on left: 1 2 3 4 5
        on right: 6
    postfix_expression (44)
        on left: 6 7 8 9 10
        on right: 7 8 9 10 13
    argument_expression_list (45)
        on left: 11 12
        on right: 8 12
    unary_expression (46)
        on left: 13 14
        on right: 14 20 21 22 23 42
    unary_operator (47)
        on left: 15 16 17 18 19
        on right: 14
    multiplicative_expression (48)
        on left: 20 21 22 23
        on right: 21 22 23 24 25 26
    additive_expression (49)
        on left: 24 25 26
        on right: 25 26 27 28 29 30 31
    relational_expression (50)
        on left: 27 28 29 30 31
        on right: 28 29 30 31 32 33 34
    equality_expression (51)
        on left: 32 33 34
        on right: 33 34 35 36 38
    logical_AND_expression (52)
        on left: 35 36
        on right: 36 37
    logical_OR_expression (53)
        on left: 37 38
        on right: 38 39 40
    conditional_expression (54)
        on left: 39 40
        on right: 40 41
    assignment_expression (55)
        on left: 41 42
        on right: 11 12 42 43 66
    expression (56)
        on left: 43
        on right: 5 7 40 44 80 81
    expression_opt (57)
        on left: 44 45
        on right: 79 82 83
    declaration (58)
        on left: 46
        on right: 77 87
    init_declarator (59)
        on left: 47 48
        on right: 46
    type_specifier (60)
        on left: 49 50 51
        on right: 46 65 88
    declarator (61)
        on left: 52
        on right: 47 48 88
    direct_declarator (62)
        on left: 53 54 55
        on right: 52 54 55
    pointer (63)
        on left: 56
        on right: 57
    pointer_opt (64)
        on left: 57 58
        on right: 52 65
    parameter_list_opt (65)
        on left: 59 60
        on right: 55
    parameter_list (66)
        on left: 61 62
        on right: 59 62
    identifier_opt (67)
        on left: 63 64
        on right: 65
    parameter_declaration (68)
        on left: 65
        on right: 61 62
    initializer (69)
        on left: 66
        on right: 48
    statement (70)
        on left: 67 68 69 70 71
        on right: 78 80 81 82
    compound_statement (71)
        on left: 72
        on right: 67 88
    block_item_list_opt (72)
        on left: 73 74
        on right: 72
    block_item_list (73)
        on left: 75 76
        on right: 73 76
    block_item (74)
        on left: 77 78
        on right: 75 76
    expression_statement (75)
        on left: 79
        on right: 68
    selection_statement (76)
        on left: 80 81
        on right: 69
    iteration_statement (77)
        on left: 82
        on right: 70
    jump_statement (78)
        on left: 83
        on right: 71
    translation_units (79)
        on left: 84 85
        on right: 0 85
    translation_unit (80)
        on left: 86 87
        on right: 84 85
    function_definition (81)
        on left: 88
        on right: 86


State 0

    0 $accept: . translation_units $end

    VOID  shift, and go to state 1
    CHAR  shift, and go to state 2
    INT   shift, and go to state 3

    declaration          go to state 4
    type_specifier       go to state 5
    translation_units    go to state 6
    translation_unit     go to state 7
    function_definition  go to state 8


State 1

   49 type_specifier: VOID .

    $default  reduce using rule 49 (type_specifier)


State 2

   50 type_specifier: CHAR .

    $default  reduce using rule 50 (type_specifier)


State 3

   51 type_specifier: INT .

    $default  reduce using rule 51 (type_specifier)


State 4

   87 translation_unit: declaration .

    $default  reduce using rule 87 (translation_unit)


State 5

   46 declaration: type_specifier . init_declarator SEMI_COLON
   88 function_definition: type_specifier . declarator compound_statement

    STAR  shift, and go to state 9

    $default  reduce using rule 58 (pointer_opt)

    init_declarator  go to state 10
    declarator       go to state 11
    pointer          go to state 12
    pointer_opt      go to state 13


State 6

    0 $accept: translation_units . $end
   85 translation_units: translation_units . translation_unit

    $end  shift, and go to state 14
    VOID  shift, and go to state 1
    CHAR  shift, and go to state 2
    INT   shift, and go to state 3

    declaration          go to state 4
    type_specifier       go to state 5
    translation_unit     go to state 15
    function_definition  go to state 8


State 7

   84 translation_units: translation_unit .

    $default  reduce using rule 84 (translation_units)


State 8

   86 translation_unit: function_definition .

    $default  reduce using rule 86 (translation_unit)


State 9

   56 pointer: STAR .

    $default  reduce using rule 56 (pointer)


State 10

   46 declaration: type_specifier init_declarator . SEMI_COLON

    SEMI_COLON  shift, and go to state 16


State 11

   47 init_declarator: declarator .
   48                | declarator . EQ initializer
   88 function_definition: type_specifier declarator . compound_statement

    EQ                shift, and go to state 17
    CURLY_BRACE_OPEN  shift, and go to state 18

    $default  reduce using rule 47 (init_declarator)

    compound_statement  go to state 19


State 12

   57 pointer_opt: pointer .

    $default  reduce using rule 57 (pointer_opt)


State 13

   52 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 20

    direct_declarator  go to state 21


State 14

    0 $accept: translation_units $end .

    $default  accept


State 15

   85 translation_units: translation_units translation_unit .

    $default  reduce using rule 85 (translation_units)


State 16

   46 declaration: type_specifier init_declarator SEMI_COLON .

    $default  reduce using rule 46 (declaration)


State 17

   48 init_declarator: declarator EQ . initializer

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 43
    initializer                go to state 44


State 18

   72 compound_statement: CURLY_BRACE_OPEN . block_item_list_opt CURLY_BRACE_CLOSE

    CURLY_BRACE_OPEN    shift, and go to state 18
    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    INT                 shift, and go to state 3
    IF                  shift, and go to state 45
    FOR                 shift, and go to state 46
    RETURN              shift, and go to state 47
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    CURLY_BRACE_CLOSE  reduce using rule 74 (block_item_list_opt)
    $default           reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 50
    declaration                go to state 51
    type_specifier             go to state 52
    statement                  go to state 53
    compound_statement         go to state 54
    block_item_list_opt        go to state 55
    block_item_list            go to state 56
    block_item                 go to state 57
    expression_statement       go to state 58
    selection_statement        go to state 59
    iteration_statement        go to state 60
    jump_statement             go to state 61


State 19

   88 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 88 (function_definition)


State 20

   53 direct_declarator: IDENTIFIER .

    $default  reduce using rule 53 (direct_declarator)


State 21

   52 declarator: pointer_opt direct_declarator .
   54 direct_declarator: direct_declarator . SQ_BRACE_OPEN INTEGER_CONSTANT SQ_BRACE_CLOSE
   55                  | direct_declarator . ROUND_BRACE_OPEN parameter_list_opt ROUND_BRACE_CLOSE

    ROUND_BRACE_OPEN  shift, and go to state 62
    SQ_BRACE_OPEN     shift, and go to state 63

    $default  reduce using rule 52 (declarator)


State 22

    5 primary_expression: ROUND_BRACE_OPEN . expression ROUND_BRACE_CLOSE

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 64


State 23

   15 unary_operator: BITWISEAND .

    $default  reduce using rule 15 (unary_operator)


State 24

   16 unary_operator: STAR .

    $default  reduce using rule 16 (unary_operator)


State 25

   17 unary_operator: PLUS .

    $default  reduce using rule 17 (unary_operator)


State 26

   18 unary_operator: MINUS .

    $default  reduce using rule 18 (unary_operator)


State 27

   19 unary_operator: EXCLAMATION .

    $default  reduce using rule 19 (unary_operator)


State 28

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 29

    2 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 30

    3 primary_expression: CHARACTER_CONSTANT .

    $default  reduce using rule 3 (primary_expression)


State 31

    4 primary_expression: STRING_LITERAL .

    $default  reduce using rule 4 (primary_expression)


State 32

    6 postfix_expression: primary_expression .

    $default  reduce using rule 6 (postfix_expression)


State 33

    7 postfix_expression: postfix_expression . SQ_BRACE_OPEN expression SQ_BRACE_CLOSE
    8                   | postfix_expression . ROUND_BRACE_OPEN argument_expression_list ROUND_BRACE_CLOSE
    9                   | postfix_expression . ROUND_BRACE_OPEN ROUND_BRACE_CLOSE
   10                   | postfix_expression . PTR IDENTIFIER
   13 unary_expression: postfix_expression .

    PTR               shift, and go to state 65
    ROUND_BRACE_OPEN  shift, and go to state 66
    SQ_BRACE_OPEN     shift, and go to state 67

    $default  reduce using rule 13 (unary_expression)


State 34

   20 multiplicative_expression: unary_expression .
   42 assignment_expression: unary_expression . EQ assignment_expression

    EQ  shift, and go to state 68

    $default  reduce using rule 20 (multiplicative_expression)


State 35

   14 unary_expression: unary_operator . unary_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression  go to state 32
    postfix_expression  go to state 33
    unary_expression    go to state 69
    unary_operator      go to state 35


State 36

   21 multiplicative_expression: multiplicative_expression . STAR unary_expression
   22                          | multiplicative_expression . DIVIDE unary_expression
   23                          | multiplicative_expression . PERCENTAGE unary_expression
   24 additive_expression: multiplicative_expression .

    STAR        shift, and go to state 70
    DIVIDE      shift, and go to state 71
    PERCENTAGE  shift, and go to state 72

    $default  reduce using rule 24 (additive_expression)


State 37

   25 additive_expression: additive_expression . PLUS multiplicative_expression
   26                    | additive_expression . MINUS multiplicative_expression
   27 relational_expression: additive_expression .

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 27 (relational_expression)


State 38

   28 relational_expression: relational_expression . LESS_THAN additive_expression
   29                      | relational_expression . GREATER_THAN additive_expression
   30                      | relational_expression . LTE_OP additive_expression
   31                      | relational_expression . GTE_OP additive_expression
   32 equality_expression: relational_expression .

    LTE_OP        shift, and go to state 75
    GTE_OP        shift, and go to state 76
    LESS_THAN     shift, and go to state 77
    GREATER_THAN  shift, and go to state 78

    $default  reduce using rule 32 (equality_expression)


State 39

   33 equality_expression: equality_expression . EQ_OP relational_expression
   34                    | equality_expression . NE_OP relational_expression
   35 logical_AND_expression: equality_expression .

    EQ_OP  shift, and go to state 79
    NE_OP  shift, and go to state 80

    $default  reduce using rule 35 (logical_AND_expression)


State 40

   36 logical_AND_expression: logical_AND_expression . AND_OP equality_expression
   37 logical_OR_expression: logical_AND_expression .

    AND_OP  shift, and go to state 81

    $default  reduce using rule 37 (logical_OR_expression)


State 41

   38 logical_OR_expression: logical_OR_expression . OR_OP equality_expression
   39 conditional_expression: logical_OR_expression .
   40                       | logical_OR_expression . QUESTION_MARK expression COLON conditional_expression

    QUESTION_MARK  shift, and go to state 82
    OR_OP          shift, and go to state 83

    $default  reduce using rule 39 (conditional_expression)


State 42

   41 assignment_expression: conditional_expression .

    $default  reduce using rule 41 (assignment_expression)


State 43

   66 initializer: assignment_expression .

    $default  reduce using rule 66 (initializer)


State 44

   48 init_declarator: declarator EQ initializer .

    $default  reduce using rule 48 (init_declarator)


State 45

   80 selection_statement: IF . ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement
   81                    | IF . ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement ELSE statement

    ROUND_BRACE_OPEN  shift, and go to state 84


State 46

   82 iteration_statement: FOR . ROUND_BRACE_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt ROUND_BRACE_CLOSE statement

    ROUND_BRACE_OPEN  shift, and go to state 85


State 47

   83 jump_statement: RETURN . expression_opt SEMI_COLON

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    $default  reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 86


State 48

   43 expression: assignment_expression .

    $default  reduce using rule 43 (expression)


State 49

   44 expression_opt: expression .

    $default  reduce using rule 44 (expression_opt)


State 50

   79 expression_statement: expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 87


State 51

   77 block_item: declaration .

    $default  reduce using rule 77 (block_item)


State 52

   46 declaration: type_specifier . init_declarator SEMI_COLON

    STAR  shift, and go to state 9

    $default  reduce using rule 58 (pointer_opt)

    init_declarator  go to state 10
    declarator       go to state 88
    pointer          go to state 12
    pointer_opt      go to state 13


State 53

   78 block_item: statement .

    $default  reduce using rule 78 (block_item)


State 54

   67 statement: compound_statement .

    $default  reduce using rule 67 (statement)


State 55

   72 compound_statement: CURLY_BRACE_OPEN block_item_list_opt . CURLY_BRACE_CLOSE

    CURLY_BRACE_CLOSE  shift, and go to state 89


State 56

   73 block_item_list_opt: block_item_list .
   76 block_item_list: block_item_list . block_item

    CURLY_BRACE_OPEN    shift, and go to state 18
    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    INT                 shift, and go to state 3
    IF                  shift, and go to state 45
    FOR                 shift, and go to state 46
    RETURN              shift, and go to state 47
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    CURLY_BRACE_CLOSE  reduce using rule 73 (block_item_list_opt)
    $default           reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 50
    declaration                go to state 51
    type_specifier             go to state 52
    statement                  go to state 53
    compound_statement         go to state 54
    block_item                 go to state 90
    expression_statement       go to state 58
    selection_statement        go to state 59
    iteration_statement        go to state 60
    jump_statement             go to state 61


State 57

   75 block_item_list: block_item .

    $default  reduce using rule 75 (block_item_list)


State 58

   68 statement: expression_statement .

    $default  reduce using rule 68 (statement)


State 59

   69 statement: selection_statement .

    $default  reduce using rule 69 (statement)


State 60

   70 statement: iteration_statement .

    $default  reduce using rule 70 (statement)


State 61

   71 statement: jump_statement .

    $default  reduce using rule 71 (statement)


State 62

   55 direct_declarator: direct_declarator ROUND_BRACE_OPEN . parameter_list_opt ROUND_BRACE_CLOSE

    VOID  shift, and go to state 1
    CHAR  shift, and go to state 2
    INT   shift, and go to state 3

    $default  reduce using rule 60 (parameter_list_opt)

    type_specifier         go to state 91
    parameter_list_opt     go to state 92
    parameter_list         go to state 93
    parameter_declaration  go to state 94


State 63

   54 direct_declarator: direct_declarator SQ_BRACE_OPEN . INTEGER_CONSTANT SQ_BRACE_CLOSE

    INTEGER_CONSTANT  shift, and go to state 95


State 64

    5 primary_expression: ROUND_BRACE_OPEN expression . ROUND_BRACE_CLOSE

    ROUND_BRACE_CLOSE  shift, and go to state 96


State 65

   10 postfix_expression: postfix_expression PTR . IDENTIFIER

    IDENTIFIER  shift, and go to state 97


State 66

    8 postfix_expression: postfix_expression ROUND_BRACE_OPEN . argument_expression_list ROUND_BRACE_CLOSE
    9                   | postfix_expression ROUND_BRACE_OPEN . ROUND_BRACE_CLOSE

    ROUND_BRACE_OPEN    shift, and go to state 22
    ROUND_BRACE_CLOSE   shift, and go to state 98
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    argument_expression_list   go to state 99
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 100


State 67

    7 postfix_expression: postfix_expression SQ_BRACE_OPEN . expression SQ_BRACE_CLOSE

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 101


State 68

   42 assignment_expression: unary_expression EQ . assignment_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 102


State 69

   14 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 14 (unary_expression)


State 70

   21 multiplicative_expression: multiplicative_expression STAR . unary_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression  go to state 32
    postfix_expression  go to state 33
    unary_expression    go to state 103
    unary_operator      go to state 35


State 71

   22 multiplicative_expression: multiplicative_expression DIVIDE . unary_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression  go to state 32
    postfix_expression  go to state 33
    unary_expression    go to state 104
    unary_operator      go to state 35


State 72

   23 multiplicative_expression: multiplicative_expression PERCENTAGE . unary_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression  go to state 32
    postfix_expression  go to state 33
    unary_expression    go to state 105
    unary_operator      go to state 35


State 73

   25 additive_expression: additive_expression PLUS . multiplicative_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 107


State 74

   26 additive_expression: additive_expression MINUS . multiplicative_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 108


State 75

   30 relational_expression: relational_expression LTE_OP . additive_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 109


State 76

   31 relational_expression: relational_expression GTE_OP . additive_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 110


State 77

   28 relational_expression: relational_expression LESS_THAN . additive_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 111


State 78

   29 relational_expression: relational_expression GREATER_THAN . additive_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 112


State 79

   33 equality_expression: equality_expression EQ_OP . relational_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 113


State 80

   34 equality_expression: equality_expression NE_OP . relational_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 114


State 81

   36 logical_AND_expression: logical_AND_expression AND_OP . equality_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 115


State 82

   40 conditional_expression: logical_OR_expression QUESTION_MARK . expression COLON conditional_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 116


State 83

   38 logical_OR_expression: logical_OR_expression OR_OP . equality_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 117


State 84

   80 selection_statement: IF ROUND_BRACE_OPEN . expression ROUND_BRACE_CLOSE statement
   81                    | IF ROUND_BRACE_OPEN . expression ROUND_BRACE_CLOSE statement ELSE statement

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 118


State 85

   82 iteration_statement: FOR ROUND_BRACE_OPEN . expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt ROUND_BRACE_CLOSE statement

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    $default  reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 119


State 86

   83 jump_statement: RETURN expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 120


State 87

   79 expression_statement: expression_opt SEMI_COLON .

    $default  reduce using rule 79 (expression_statement)


State 88

   47 init_declarator: declarator .
   48                | declarator . EQ initializer

    EQ  shift, and go to state 17

    $default  reduce using rule 47 (init_declarator)


State 89

   72 compound_statement: CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE .

    $default  reduce using rule 72 (compound_statement)


State 90

   76 block_item_list: block_item_list block_item .

    $default  reduce using rule 76 (block_item_list)


State 91

   65 parameter_declaration: type_specifier . pointer_opt identifier_opt

    STAR  shift, and go to state 9

    $default  reduce using rule 58 (pointer_opt)

    pointer      go to state 12
    pointer_opt  go to state 121


State 92

   55 direct_declarator: direct_declarator ROUND_BRACE_OPEN parameter_list_opt . ROUND_BRACE_CLOSE

    ROUND_BRACE_CLOSE  shift, and go to state 122


State 93

   59 parameter_list_opt: parameter_list .
   62 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 123

    $default  reduce using rule 59 (parameter_list_opt)


State 94

   61 parameter_list: parameter_declaration .

    $default  reduce using rule 61 (parameter_list)


State 95

   54 direct_declarator: direct_declarator SQ_BRACE_OPEN INTEGER_CONSTANT . SQ_BRACE_CLOSE

    SQ_BRACE_CLOSE  shift, and go to state 124


State 96

    5 primary_expression: ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE .

    $default  reduce using rule 5 (primary_expression)


State 97

   10 postfix_expression: postfix_expression PTR IDENTIFIER .

    $default  reduce using rule 10 (postfix_expression)


State 98

    9 postfix_expression: postfix_expression ROUND_BRACE_OPEN ROUND_BRACE_CLOSE .

    $default  reduce using rule 9 (postfix_expression)


State 99

    8 postfix_expression: postfix_expression ROUND_BRACE_OPEN argument_expression_list . ROUND_BRACE_CLOSE
   12 argument_expression_list: argument_expression_list . COMMA assignment_expression

    ROUND_BRACE_CLOSE  shift, and go to state 125
    COMMA              shift, and go to state 126


State 100

   11 argument_expression_list: assignment_expression .

    $default  reduce using rule 11 (argument_expression_list)


State 101

    7 postfix_expression: postfix_expression SQ_BRACE_OPEN expression . SQ_BRACE_CLOSE

    SQ_BRACE_CLOSE  shift, and go to state 127


State 102

   42 assignment_expression: unary_expression EQ assignment_expression .

    $default  reduce using rule 42 (assignment_expression)


State 103

   21 multiplicative_expression: multiplicative_expression STAR unary_expression .

    $default  reduce using rule 21 (multiplicative_expression)


State 104

   22 multiplicative_expression: multiplicative_expression DIVIDE unary_expression .

    $default  reduce using rule 22 (multiplicative_expression)


State 105

   23 multiplicative_expression: multiplicative_expression PERCENTAGE unary_expression .

    $default  reduce using rule 23 (multiplicative_expression)


State 106

   20 multiplicative_expression: unary_expression .

    $default  reduce using rule 20 (multiplicative_expression)


State 107

   21 multiplicative_expression: multiplicative_expression . STAR unary_expression
   22                          | multiplicative_expression . DIVIDE unary_expression
   23                          | multiplicative_expression . PERCENTAGE unary_expression
   25 additive_expression: additive_expression PLUS multiplicative_expression .

    STAR        shift, and go to state 70
    DIVIDE      shift, and go to state 71
    PERCENTAGE  shift, and go to state 72

    $default  reduce using rule 25 (additive_expression)


State 108

   21 multiplicative_expression: multiplicative_expression . STAR unary_expression
   22                          | multiplicative_expression . DIVIDE unary_expression
   23                          | multiplicative_expression . PERCENTAGE unary_expression
   26 additive_expression: additive_expression MINUS multiplicative_expression .

    STAR        shift, and go to state 70
    DIVIDE      shift, and go to state 71
    PERCENTAGE  shift, and go to state 72

    $default  reduce using rule 26 (additive_expression)


State 109

   25 additive_expression: additive_expression . PLUS multiplicative_expression
   26                    | additive_expression . MINUS multiplicative_expression
   30 relational_expression: relational_expression LTE_OP additive_expression .

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 30 (relational_expression)


State 110

   25 additive_expression: additive_expression . PLUS multiplicative_expression
   26                    | additive_expression . MINUS multiplicative_expression
   31 relational_expression: relational_expression GTE_OP additive_expression .

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 31 (relational_expression)


State 111

   25 additive_expression: additive_expression . PLUS multiplicative_expression
   26                    | additive_expression . MINUS multiplicative_expression
   28 relational_expression: relational_expression LESS_THAN additive_expression .

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 28 (relational_expression)


State 112

   25 additive_expression: additive_expression . PLUS multiplicative_expression
   26                    | additive_expression . MINUS multiplicative_expression
   29 relational_expression: relational_expression GREATER_THAN additive_expression .

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 29 (relational_expression)


State 113

   28 relational_expression: relational_expression . LESS_THAN additive_expression
   29                      | relational_expression . GREATER_THAN additive_expression
   30                      | relational_expression . LTE_OP additive_expression
   31                      | relational_expression . GTE_OP additive_expression
   33 equality_expression: equality_expression EQ_OP relational_expression .

    LTE_OP        shift, and go to state 75
    GTE_OP        shift, and go to state 76
    LESS_THAN     shift, and go to state 77
    GREATER_THAN  shift, and go to state 78

    $default  reduce using rule 33 (equality_expression)


State 114

   28 relational_expression: relational_expression . LESS_THAN additive_expression
   29                      | relational_expression . GREATER_THAN additive_expression
   30                      | relational_expression . LTE_OP additive_expression
   31                      | relational_expression . GTE_OP additive_expression
   34 equality_expression: equality_expression NE_OP relational_expression .

    LTE_OP        shift, and go to state 75
    GTE_OP        shift, and go to state 76
    LESS_THAN     shift, and go to state 77
    GREATER_THAN  shift, and go to state 78

    $default  reduce using rule 34 (equality_expression)


State 115

   33 equality_expression: equality_expression . EQ_OP relational_expression
   34                    | equality_expression . NE_OP relational_expression
   36 logical_AND_expression: logical_AND_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 79
    NE_OP  shift, and go to state 80

    $default  reduce using rule 36 (logical_AND_expression)


State 116

   40 conditional_expression: logical_OR_expression QUESTION_MARK expression . COLON conditional_expression

    COLON  shift, and go to state 128


State 117

   33 equality_expression: equality_expression . EQ_OP relational_expression
   34                    | equality_expression . NE_OP relational_expression
   38 logical_OR_expression: logical_OR_expression OR_OP equality_expression .

    EQ_OP  shift, and go to state 79
    NE_OP  shift, and go to state 80

    $default  reduce using rule 38 (logical_OR_expression)


State 118

   80 selection_statement: IF ROUND_BRACE_OPEN expression . ROUND_BRACE_CLOSE statement
   81                    | IF ROUND_BRACE_OPEN expression . ROUND_BRACE_CLOSE statement ELSE statement

    ROUND_BRACE_CLOSE  shift, and go to state 129


State 119

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt . SEMI_COLON expression_opt SEMI_COLON expression_opt ROUND_BRACE_CLOSE statement

    SEMI_COLON  shift, and go to state 130


State 120

   83 jump_statement: RETURN expression_opt SEMI_COLON .

    $default  reduce using rule 83 (jump_statement)


State 121

   65 parameter_declaration: type_specifier pointer_opt . identifier_opt

    IDENTIFIER  shift, and go to state 131

    $default  reduce using rule 64 (identifier_opt)

    identifier_opt  go to state 132


State 122

   55 direct_declarator: direct_declarator ROUND_BRACE_OPEN parameter_list_opt ROUND_BRACE_CLOSE .

    $default  reduce using rule 55 (direct_declarator)


State 123

   62 parameter_list: parameter_list COMMA . parameter_declaration

    VOID  shift, and go to state 1
    CHAR  shift, and go to state 2
    INT   shift, and go to state 3

    type_specifier         go to state 91
    parameter_declaration  go to state 133


State 124

   54 direct_declarator: direct_declarator SQ_BRACE_OPEN INTEGER_CONSTANT SQ_BRACE_CLOSE .

    $default  reduce using rule 54 (direct_declarator)


State 125

    8 postfix_expression: postfix_expression ROUND_BRACE_OPEN argument_expression_list ROUND_BRACE_CLOSE .

    $default  reduce using rule 8 (postfix_expression)


State 126

   12 argument_expression_list: argument_expression_list COMMA . assignment_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 134


State 127

    7 postfix_expression: postfix_expression SQ_BRACE_OPEN expression SQ_BRACE_CLOSE .

    $default  reduce using rule 7 (postfix_expression)


State 128

   40 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON . conditional_expression

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 106
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 135


State 129

   80 selection_statement: IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE . statement
   81                    | IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE . statement ELSE statement

    CURLY_BRACE_OPEN    shift, and go to state 18
    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IF                  shift, and go to state 45
    FOR                 shift, and go to state 46
    RETURN              shift, and go to state 47
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    $default  reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 50
    statement                  go to state 136
    compound_statement         go to state 54
    expression_statement       go to state 58
    selection_statement        go to state 59
    iteration_statement        go to state 60
    jump_statement             go to state 61


State 130

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt SEMI_COLON . expression_opt SEMI_COLON expression_opt ROUND_BRACE_CLOSE statement

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    $default  reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 137


State 131

   63 identifier_opt: IDENTIFIER .

    $default  reduce using rule 63 (identifier_opt)


State 132

   65 parameter_declaration: type_specifier pointer_opt identifier_opt .

    $default  reduce using rule 65 (parameter_declaration)


State 133

   62 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 62 (parameter_list)


State 134

   12 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 12 (argument_expression_list)


State 135

   40 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 40 (conditional_expression)


State 136

   80 selection_statement: IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement .
   81                    | IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement . ELSE statement

    ELSE  shift, and go to state 138

    $default  reduce using rule 80 (selection_statement)


State 137

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt SEMI_COLON expression_opt . SEMI_COLON expression_opt ROUND_BRACE_CLOSE statement

    SEMI_COLON  shift, and go to state 139


State 138

   81 selection_statement: IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement ELSE . statement

    CURLY_BRACE_OPEN    shift, and go to state 18
    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IF                  shift, and go to state 45
    FOR                 shift, and go to state 46
    RETURN              shift, and go to state 47
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    $default  reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 50
    statement                  go to state 140
    compound_statement         go to state 54
    expression_statement       go to state 58
    selection_statement        go to state 59
    iteration_statement        go to state 60
    jump_statement             go to state 61


State 139

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON . expression_opt ROUND_BRACE_CLOSE statement

    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    $default  reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 141


State 140

   81 selection_statement: IF ROUND_BRACE_OPEN expression ROUND_BRACE_CLOSE statement ELSE statement .

    $default  reduce using rule 81 (selection_statement)


State 141

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt . ROUND_BRACE_CLOSE statement

    ROUND_BRACE_CLOSE  shift, and go to state 142


State 142

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt ROUND_BRACE_CLOSE . statement

    CURLY_BRACE_OPEN    shift, and go to state 18
    ROUND_BRACE_OPEN    shift, and go to state 22
    BITWISEAND          shift, and go to state 23
    STAR                shift, and go to state 24
    PLUS                shift, and go to state 25
    MINUS               shift, and go to state 26
    EXCLAMATION         shift, and go to state 27
    IF                  shift, and go to state 45
    FOR                 shift, and go to state 46
    RETURN              shift, and go to state 47
    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    CHARACTER_CONSTANT  shift, and go to state 30
    STRING_LITERAL      shift, and go to state 31

    $default  reduce using rule 45 (expression_opt)

    primary_expression         go to state 32
    postfix_expression         go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_AND_expression     go to state 40
    logical_OR_expression      go to state 41
    conditional_expression     go to state 42
    assignment_expression      go to state 48
    expression                 go to state 49
    expression_opt             go to state 50
    statement                  go to state 143
    compound_statement         go to state 54
    expression_statement       go to state 58
    selection_statement        go to state 59
    iteration_statement        go to state 60
    jump_statement             go to state 61


State 143

   82 iteration_statement: FOR ROUND_BRACE_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt ROUND_BRACE_CLOSE statement .

    $default  reduce using rule 82 (iteration_statement)
